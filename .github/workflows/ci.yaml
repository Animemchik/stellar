name: ci
on:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_PROFILE_TEST_DEBUG: 0
  CROSS_CONTAINER_UID: 0

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
            run-integration-tests: true
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: true
            run-integration-tests: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use-cross: true
            run-integration-tests: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use-cross: true
            run-integration-tests: false
          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
            run-integration-tests: true
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false
            run-integration-tests: false
    steps:
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true
          default: true
          profile: minimal

      - name: Handle Rust dependencies caching
        uses: Swatinem/rust-cache@v2
        with:
          key: v1-${{ matrix.target }}

      - name: Debug
        run: ls

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: "--workspace --target ${{ matrix.target }}"
          use-cross: ${{ matrix.use-cross }}
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
          profile: minimal
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  validate-deps:
    name: validate-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
          profile: minimal

      - name: Install cargo-deny
        run: |
          set -e
          curl -L https://github.com/EmbarkStudios/cargo-deny/releases/download/0.8.5/cargo-deny-0.8.5-x86_64-unknown-linux-musl.tar.gz | tar xzf -
          mv cargo-deny-*-x86_64-unknown-linux-musl/cargo-deny cargo-deny
          echo `pwd` >> $GITHUB_PATH

      - name: Validate deps
        uses: actions-rs/cargo@v1
        with:
          command: deny
          args: check

  lint-build:
    name: lint-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          default: true
          profile: minimal
          components: clippy

      - name: Handle Rust dependencies caching
        uses: Swatinem/rust-cache@v2
        with:
          key: v1-linux-gnu

      - name: Run linter
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
