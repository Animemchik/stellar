name: ci
on:
    pull_request:
    push:
      branches:
        - main

env:
    CARGO_TERM_COLOR: always
    RUSTFLAGS: "-D warnings"
    CARGO_INCREMENTAL: 0
    CARGO_PROFILE_DEV_DEBUG: 0
    CARGO_PROFILE_TEST_DEBUG: 0
    CROSS_CONTAINER_UID: 0

jobs:
    test:
        name: test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
            toolchain: [stable]
            target:
                - x86_64-unknown-linux-gnu
                - x86_64-unknown-linux-musl
                - aarch64-unknown-linux-gnu
                - aarch64-unknown-linux-musl
                - x86_64-apple-darwin
                - x86_64-pc-windows-msvc
            include:
                - os: ubuntu-latest
                    target: x86_64-unknown-linux-gnu
                    use-cross: false
                    run-integration-tests: true
                - os: ubuntu-latest
                    target: x86_64-unknown-linux-musl
                    use-cross: true
                    run-integration-tests: true
                - os: ubuntu-latest
                    target: aarch64-unknown-linux-gnu
                    use-cross: true
                    run-integration-tests: false # Cannot run aarch64 binaries on x86_64
                - os: ubuntu-latest
                    target: aarch64-unknown-linux-musl
                    use-cross: true
                    run-integration-tests: false # Cannot run aarch64 binaries on x86_64
                - os: macos-latest
                    target: x86_64-apple-darwin
                    use-cross: false
                    run-integration-tests: true
                - os: windows-latest
                    target: x86_64-pc-windows-msvc
                    use-cross: false
                    run-integration-tests: true
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Install Rust toolchain
                uses: actions-rs/toolchain@v1
                with:
                toolchain: ${{ matrix.toolchain }}
                target: ${{ matrix.target }}
                override: true
                default: true
                profile: minimal

            - name: Handle Rust dependencies caching
                uses: Swatinem/rust-cache@v2
                with:
                key: v1-${{ matrix.target }}

            - name: Run tests
                uses: actions-rs/cargo@v1
                with:
                command: test
                args: "--workspace --target ${{ matrix.target }}"
                use-cross: ${{ matrix.use-cross }}

            - name: Check formatting
                uses: actions-rs/cargo@v1
                with:
                command: fmt
                args: --all -- --check

            - name: Build binary
                uses: actions-rs/cargo@v1
                with:
                command: build
